{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/components/Panel.js","webpack:///./src/utils/helpers.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./src/components/Bio.js","webpack:///./src/components/Footer.js","webpack:///./src/components/Header.js","webpack:///./src/templates/blog-index.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./src/assets/profile-pic.jpg"],"names":["SEO","meta","image","title","description","slug","lang","query","render","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","Panel","children","style","fontSize","border","borderRadius","padding","background","wordBreak","formatReadingTime","minutes","cups","Math","round","Array","E","fill","join","formatPostDate","date","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean","toObject","toAbsoluteIndex","toLength","module","exports","value","O","this","length","aLen","arguments","index","undefined","end","endPos","Bio","display","marginBottom","rhythm","src","profilePic","alt","marginRight","width","height","maxWidth","href","React","Component","Footer","marginTop","paddingTop","float","target","rel","Categories","Header","state","selectedCategories","selectedStyle","boxShadow","textDecoration","unselectedStyle","onClickCategory","category","includes","push","console","error","props","updateSelectedCategories","setState","fontFamily","to","onClick","BlogIndexTemplate","categories","siteTitle","get","langKey","pageContext","posts","post","node","frontmatter","Layout","location","map","fields","key","timeToRead","dangerouslySetInnerHTML","__html","spoiler","pageQuery","$export","P"],"mappings":"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","file":"component---src-templates-blog-index-js-81cb8f5da6104482ae29.js","sourcesContent":["import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s — ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title} — A blog by Dan Abramov`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                metaImage\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('🍱')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Dan Abramov`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 310 }}>\n          Personal blog by{' '}\n          <a href=\"https://mobile.twitter.com/papay0\">Arthur Papailhau</a>.{' '}\n          Software Engineer @Uber (Eats)\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://mobile.twitter.com/dan_abramov\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/gaearon\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://stackoverflow.com/users/458193/dan-abramov\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          stack overflow\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { rhythm } from '../utils/typography';\n\nexport const Categories = {\n  ARTICLE: 'article',\n  PROJECT: 'project',\n  JOB: 'job',\n};\n\nclass Header extends React.Component {\n  state = {\n    selectedCategories: [],\n  };\n  selectedStyle = {\n    marginRight: '40px',\n    boxShadow: 'none',\n    textDecoration: 'underline',\n  };\n  unselectedStyle = { boxShadow: 'none', marginRight: '40px' };\n\n  onClickCategory = category => {\n    let selectedCategories = this.state.selectedCategories;\n    switch (category) {\n      case Categories.ARTICLE:\n        if (selectedCategories.includes(Categories.ARTICLE)) {\n          selectedCategories = selectedCategories.filter(\n            category => category !== Categories.ARTICLE\n          );\n        } else {\n          selectedCategories.push(Categories.ARTICLE);\n        }\n        break;\n      case Categories.PROJECT:\n        if (selectedCategories.includes(Categories.PROJECT)) {\n          selectedCategories = selectedCategories.filter(\n            category => category !== Categories.PROJECT\n          );\n        } else {\n          selectedCategories.push(Categories.PROJECT);\n        }\n        break;\n      case Categories.JOB:\n        if (selectedCategories.includes(Categories.JOB)) {\n          selectedCategories = selectedCategories.filter(\n            category => category !== Categories.JOB\n          );\n        } else {\n          selectedCategories.push(Categories.JOB);\n        }\n        break;\n      default:\n        console.error('Arthur, I think you forgot a category here!');\n    }\n\n    this.props.updateSelectedCategories(selectedCategories);\n    this.setState({ selectedCategories });\n  };\n\n  render() {\n    return (\n      <h3\n        style={{\n          fontFamily: 'Montserrat, sans-serif',\n          fontSize: rhythm(1),\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        <Link\n          style={\n            this.state.selectedCategories.includes(Categories.ARTICLE)\n              ? this.selectedStyle\n              : this.unselectedStyle\n          }\n          rel=\"bookmark\"\n          to=\"\"\n          onClick={() => {\n            this.onClickCategory(Categories.ARTICLE);\n          }}\n        >\n          Articles\n        </Link>\n        <Link\n          style={\n            this.state.selectedCategories.includes(Categories.PROJECT)\n              ? this.selectedStyle\n              : this.unselectedStyle\n          }\n          to=\"\"\n          rel=\"bookmark\"\n          onClick={() => {\n            this.onClickCategory(Categories.PROJECT);\n          }}\n        >\n          Projects\n        </Link>\n        <Link\n          style={\n            this.state.selectedCategories.includes(Categories.JOB)\n              ? this.selectedStyle\n              : this.unselectedStyle\n          }\n          to=\"\"\n          rel=\"bookmark\"\n          onClick={() => {\n            this.onClickCategory(Categories.JOB);\n          }}\n        >\n          Jobs\n        </Link>\n      </h3>\n    );\n  }\n}\n\nexport default Header;\n","import { Link, graphql } from 'gatsby';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport Panel from '../components/Panel';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\nimport Header from '../components/Header';\n\nclass BlogIndexTemplate extends React.Component {\n  state = { selectedCategories: [] };\n\n  updateSelectedCategories = categories => {\n    this.setState({ selectedCategories: categories });\n  };\n\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n    const selectedCategories = this.state.selectedCategories;\n    const posts = get(this, 'props.data.allMarkdownRemark.edges').filter(\n      post => {\n        const category = post.node.frontmatter.category;\n        if (selectedCategories.length === 0) {\n          return true;\n        } else if (selectedCategories.includes(category)) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    );\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n          <Header updateSelectedCategories={this.updateSelectedCategories} />\n        </aside>\n        <main>\n          {langKey !== 'en' && langKey !== 'ru' && (\n            <Panel>\n              These articles have been{' '}\n              <a\n                href=\"https://github.com/gaearon/overreacted.io#contributing-translations\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                translated by the community\n              </a>\n              .\n            </Panel>\n          )}\n\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            return (\n              <article key={node.fields.slug}>\n                <header>\n                  <h3\n                    style={{\n                      fontFamily: 'Montserrat, sans-serif',\n                      fontSize: rhythm(1),\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      style={{ boxShadow: 'none' }}\n                      to={node.fields.slug}\n                      rel=\"bookmark\"\n                    >\n                      {title}\n                    </Link>\n                  </h3>\n                  <small>\n                    {formatPostDate(node.frontmatter.date, langKey)}\n                    {` • ${formatReadingTime(node.timeToRead)}`}\n                  </small>\n                </header>\n                <p\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\n                />\n              </article>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            langKey\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n            category\n          }\n        }\n      }\n    }\n  }\n`;\n","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","module.exports = __webpack_public_path__ + \"static/profile-pic-c715447ce38098828758e525a1128b87.jpg\";"],"sourceRoot":""}